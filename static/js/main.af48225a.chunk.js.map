{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","setState","timer","setInterval","console","log","prevProps","name","props","clearInterval","React","Component","defaultProps","App","isClockVisible","clockName","showClock","hideClock","randomName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZC,MAAOC,aAAY,WACjB,EAAKF,SAAS,CAAEJ,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,SAXT,gCAeE,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAlBhF,kCAsBE,WACEE,cAAcT,KAAKJ,MAAMM,SAvB7B,oBA0BE,WACE,OAAOF,KAAKJ,MAAMC,SA3BtB,GAA2Ba,IAAMC,WAmCjChB,EAAMiB,aAAe,CACnBL,KAAM,M,UC4BOM,E,4MA7DbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,M,EAGbC,UAAY,WACV,EAAKf,SAAS,CACZa,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKhB,SAAS,CACZa,gBAAgB,K,EAIpBI,WAAa,WACX,EAAKjB,SAAS,CACZc,UAAU,GAAD,OAAKI,KAAKC,KAAqB,IAAhBD,KAAKE,c,4CAKjC,WACE,OACE,yBAAKC,UAAU,OACb,2CACA,6CAEG,IACAtB,KAAKJ,MAAMkB,gBAAkB,kBAAC,EAAD,CAAOP,KAAMP,KAAKJ,MAAMmB,YAEtD,6BACE,4BACEQ,KAAK,SACLC,QAASxB,KAAKgB,WAFhB,QAMC,IACD,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,QAMC,IACD,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,YAFhB,0B,GAjDMR,IAAMC,WCDxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.af48225a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.setState({\n      timer: setInterval(() => {\n        this.setState({ time: new Date().toLocaleTimeString() });\n        //  eslint-disable-next-line\n        console.log(this.state.time);\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      //  eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  render() {\n    return this.state.time;\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string,\n};\n\nClock.defaultProps = {\n  name: null,\n};\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: null,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  randomName = () => {\n    this.setState({\n      clockName: `${Math.ceil(Math.random() * 100)}`,\n\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n\n          <div>\n            <button\n              type=\"button\"\n              onClick={this.showClock}\n            >\n              Show\n            </button>\n            {' '}\n            <button\n              type=\"button\"\n              onClick={this.hideClock}\n            >\n              Hide\n            </button>\n            {' '}\n            <button\n              type=\"button\"\n              onClick={this.randomName}\n            >\n              Set random name\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}